% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seq-refine.R
\name{seq_refine}
\alias{seq_refine}
\title{Refine Sequences from FASTQ Files with UMI/Barcode Actions}
\usage{
seq_refine(
  reads,
  ofile1 = NULL,
  ofile2 = NULL,
  umi_action1 = NULL,
  umi_action2 = NULL,
  barcode_action1 = NULL,
  barcode_action2 = NULL,
  extra_actions1 = NULL,
  extra_actions2 = NULL,
  batch_size = NULL,
  chunk_bytes = NULL,
  compression_level = 4L,
  nqueue = NULL,
  threads = NULL,
  odir = NULL
)
}
\arguments{
\item{reads}{A character vector of FASTQ file paths. Accepts one file for
single-end or two files for paired-end.}

\item{ofile1}{Output FASTQ file path for the first read (\code{fq1}). Required
when only one input file is given (i.e., single-end mode). Optional when two
input files are used.}

\item{ofile2}{Optional path to the output FASTQ file for \code{fq2}.}

\item{umi_action1, umi_action2}{Sequence action for extracting or trimming UMI
from \code{fq1}/\code{fq2}. \code{umi_action2} is only allowed if \code{fq2} is provided.
Specify sequence ranges using \code{\link[=seq_range]{seq_range()}} or combine multiple ranges with
\code{c()}, this also applies to following all actions. By default, the UMI is
embedded in the header and trimmed from the sequence and quality
(\code{\link[=embed_trim]{embed_trim()}}). You can customize the behavior with \code{\link[=embed]{embed()}}, or
\code{\link[=trim]{trim()}}.}

\item{barcode_action1, barcode_action2}{Sequence action for extracting or
trimming barcodes from \code{fq1}/\code{fq2}. \code{barcode_action2} is only allowed if
\code{fq2} is provided. By default, barcodes are embedded in the header and
trimmed from both the sequence and quality strings (\code{\link[=embed_trim]{embed_trim()}}).
Specify ranges as with UMI actions, and customize using \code{\link[=embed]{embed()}}, or
\code{\link[=trim]{trim()}}.}

\item{extra_actions1, extra_actions2}{Additional sequence actions to apply to
\code{fq1}/\code{fq2}. \code{extra_actions2} is only allowed if \code{fq2} is provided. These
can be a single one or a list of them. By default, these actions
perform trimming of sequences and qualities unless otherwise specified.}

\item{batch_size}{Integer. Number of FASTQ records to accumulate before
dispatching a chunk to worker threads for processing. This controls the
granularity of parallel work and affects memory usage and performance.
Default is \code{256}.}

\item{chunk_bytes}{Integer specifying the size in bytes used for compressing
and writing records in batches to disk. Default is \code{8 * 1024 * 1024}
(8MB).}

\item{compression_level}{Integer from 1 to 12 (default: \code{4}). This sets the
gzip compression level when writing output files. A higher value increases
compression ratio but may slow down writing. Only applies when output
filenames end with \code{.gz}.}

\item{nqueue}{Integer. Maximum number of buffers per thread, controlling the
amount of in-flight data awaiting writing. Default: \code{3}.}

\item{threads}{Integer. Number of threads to use. Default: \code{3}.}

\item{odir}{A string of directory to save the output files. Please see
\code{Value} section for details.}
}
\value{
None. Outputs processed FASTQ files as specified by \code{ofile1} and
\code{ofile2}.
}
\description{
This function refines one or two FASTQ files by applying trimming and
embedding operations defined via user-specified actions such as \code{\link[=embed]{embed()}},
\code{\link[=trim]{trim()}}, or \code{\link[=embed_trim]{embed_trim()}}. It supports single-end and paired-end reads,
processes data in chunks, and uses multithreading for performance.
}
\details{
Actions define what to do with sequence ranges specified using
\code{\link[=seq_range]{seq_range()}}.
\itemize{
\item UMI/barcode actions must be a single range (no lists) and default to
\code{\link[=embed_trim]{embed_trim()}} if not specified.
\item Extra actions can be multiple ranges (use a list) and default to \code{\link[=trim]{trim()}}
if not specified.
\item Use \code{\link[=embed]{embed()}}, \code{\link[=trim]{trim()}}, or \code{\link[=embed_trim]{embed_trim()}} to specify the behavior.
}
}
